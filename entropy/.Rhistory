install.packages("gdistance")
?readOGR
??readOGR
library(terra)
library(dplyr)
library("dplyr")
library("stringr")
# reading in the geno probabilities for k=2
# k4 best supported by DIC but k2 takes slots 2-4 for next best
datk2 <- read.csv("gprob2.txt")
setwd("~/Dropbox/Mardon_genetics/FigureCode/MardonGenetics_2025")
geog <- read.csv("POMA_geography.csv")
geog
dim(geog)
geog <- geog(rm.na=TRUE)
?complete.cases
geog <- complete.cases(geog)
dim(geog)
dim(geog)
geog <- read.csv("POMA_geography.csv")
dim(geog)
geog
geog <- subset(geog[c(1:98)],)
geog <- subset(geog[c(1:98),])
dim(geog)
geog
geog <- read.csv("POMA_geography.csv")
dim(geog)
geog <- subset(geog[c(1:98),])
dim(geog)
geog
geog <- read.csv("POMA_geography.csv")
dim(geog)
geog <- subset(geog[c(1:98),])
dim(geog)
geog
geog <- read.csv("POMA_geography.csv")
dim(geog)
geog <- subset(geog[c(1:98),])
dim(geog)
setwd("~/Documents/GitHub/POMA/entropy")
div <- read.csv("poma_div_mat.txt")
div
dim(iv)
dim(div)
## load files
gprobs <- read.csv("gprob2.txt", header=TRUE)
## load files
gprobs <- read.csv("gprob2.txt", header=TRUE)
dim(gprobs)
gprobs[1:10,1:10]
gprobs_noname <- gprobs[,-1]
dim(gprobs_noname)
gprobs_noname[1:10,1:10]
ids <- read.csv("POMA_PopID.csv", header=TRUE)
dim(ids)
head(ids)
pop_list <- sort(unique(ids[,3]))
calc_he <- function(input_matrix=NA){
he_vect <- vector(length=dim(input_matrix)[2])
for (i in 1:dim(input_matrix)[2]){
afreq <- mean(input_matrix[,i]) / 2		## calculate the locus allele frequency
he_vect[i] <- 2 * afreq * (1-afreq)		## calculate expected heterozygosity from the allele frequency
}
return(mean(he_vect))
}
calc_ho <- function(input_matrix=NA){
ho_vect <- vector(length=dim(input_matrix)[2])
for (i in 1:dim(input_matrix)[2]){
ho_vect[i] <- mean(input_matrix[,i] > 0.9 & input_matrix[,i] < 1.1)
}
return(mean(ho_vect))
}
div_mat <- matrix(NA, length(pop_list), 4)
colnames(div_mat) <- c("pop", "he", "ho", "fis")
for (i in 1:length(pop_list)){
div_mat[i,1] <- pop_list[i]
pop_sub <- subset(gprobs_noname, ids[,3]==pop_list[i])
div_mat[i,2] <- calc_he(pop_sub)
div_mat[i,3] <- calc_ho(pop_sub)
div_mat[i,4] <- 1 - (as.numeric(div_mat[i,3])/as.numeric(div_mat[i,2]))
print(i)
}
div_mat
div_mat
div <- read.csv("poma_div_mat.csv")
div
?t.test
t.test(div$He,div$Ho,alternative="two.sided",paired=TRUE)
sqrt(7)
0.02485099/(0.000196656*2.645751)
t.test(div$He,div$Ho,alternative="two.sided")
t.test(div$He,div$Ho,alternative="two.sided",paired=TRUE)
#### based on my excel hand calcs
0.02485099/(0.000196656*sqrt(7))
div <- read.csv("poma_div_mat.csv")
div
head(datk2)
# reading in the geno probabilities for k=2
# k4 best supported by DIC but k2 takes slots 2-4 for next best
datk2 <- read.csv("gprob2.txt")
head(datk2[,c(1:6)])
dim(datk2)
hist(datk2$locus9)
hist(datk2$locus1)
hist(datk2$locus2)
hist(datk2$locus3)
k2.id <- cbind(ids,datk2)
all_pca <- prcomp(k2.id[,c(5:33801)], center=TRUE, scale=FALSE)
summary(all_pca)
hp <- pca.ids[pca.ids$Pop == "HP",]
pca.ids <- cbind(ids,all_pca$x)
#replaces the MV with WV in the Pop IDs
pca.ids <- pca.ids %>%
mutate(Pop = str_replace(Pop, "^MV", "WV"))
#replaces the MV with WV in the individual IDs
pca.ids <- pca.ids %>%
mutate(ID = str_replace(ID, "^PM_MV", "PM_WV"))
unique(pca.ids$Pop)
#subsetting the pops
hp <- pca.ids[pca.ids$Pop == "HP",]
ja <- pca.ids[pca.ids$Pop == "JA",]
lb <- pca.ids[pca.ids$Pop == "LB",]
me <- pca.ids[pca.ids$Pop == "ME",]
mt <- pca.ids[pca.ids$Pop == "MT",]
wv <- pca.ids[pca.ids$Pop == "WV",]
pp <- pca.ids[pca.ids$Pop == "PP",]
par(mar=c(5,5,1,1))
plot(all_pca$x[,1], all_pca$x[,2], type="n", xlab="PC 1", ylab="PC 2", cex.lab=1.5, las=1)
points(hp$PC1,hp$PC2,pch=20,col="#3E4A1C",cex=1.5)
points(ja$PC1,ja$PC2,pch=20,col="#3F2438",cex=1.5)
points(lb$PC1,lb$PC2,pch=20,col="#F7DEFF",cex=1.5)
points(me$PC1,me$PC2,pch=20,col="#D4C588",cex=1.5)
points(mt$PC1,mt$PC2,pch=20,col="#E4D7F5",cex=1.5)
points(wv$PC1,wv$PC2,pch=20,col="#787737",cex=1.5)
points(pp$PC1,pp$PC2,pch=20,col="#D8B37D",cex=1.5)
####### K4 just to compare ########
datk4 <- read.csv("gprob4.txt")
k4.id <- cbind(ids,datk4)
all_pca4 <- prcomp(k4.id[,c(5:33801)], center=TRUE, scale=FALSE)
summary(all_pca4)
summary(all_pca) # to compare
################
### just WA PCA ###
#### k=2 ######
###############
ja.gen2 <- subset(k2.id, Pop=="JA")
me.gen2 <- subset(k2.id, Pop=="ME")
pp.gen2 <- subset(k2.id, Pop=="PP")
#combining
step <- rbind(ja.gen2,me.gen2)
wa.genos2 <- rbind(step, pp.gen2)
dim(wa.genos2) # should be 32 33801
head(wa.genos2[,c(1:6)])
wa_pca2 <- prcomp(wa.genos2[,c(5:33801)], center=TRUE, scale=FALSE)
summary(wa_pca2)
div <- read.csv("poma_div_mat.csv")
div
# paired t test since these samples aren't independent
t.test(div$He,div$Ho,alternative="two.sided",paired=TRUE)
